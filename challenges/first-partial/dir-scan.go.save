package main

import (
	"fmt"
	"os"
	"io/ioutil"
	"path/filepath"

)

type WalkFunc func(path string, info os.FileInfo, err error) error

func prepareTestDirTree(path string) (string, error){
	tmpDir, err := ioutil.TempDir("","")
	if err != nil{
		return "", fmt.Errorf("error creating temp directory: %v\n", err)
	}
	err = os.MkdirAll(filepath.Join(tmpDir, path), 0755)
	if err != nil{
		os.RemoveAll(tmpDir)
		return "", err
	}
	return tmpDir, nil
}

func Walk(root string, walkFn WalkFunc) error

//function to know if is a directory
func (m FileMode) IsDir() bool {
	return m&ModeDir != 0
}

// scanDir stands for the directory scanning implementation
func scanDir(dir string, walkFn WalkFunc) error {
	return nil
}

func main() {
	if len(os.Args) < 2 {
		fmt.Println("Usage: ./dir-scan <directory>")
		os.Exit(1)
	}
	scanDir(os.Args[1])
	err = filepath.Walk(".", func(path string, info os.FileInfo, err error) error {
		if err != nil {
			fmt.Printf("prevent panic by handling failure accessing a path %q: %v\n", path, err)
			return err
		}
		fmt.Printf("visited file or dir: %q\n", path)
		return nil
	})
	if err != nil {
		fmt.Printf("error walking the path %q: %v\n", tmpDir, err)
		return
	}
}
